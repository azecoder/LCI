Grammar

    0 $accept: program $end

    1 program: decls stmt

    2 type: BOOL_TYPE
    3     | INT_TYPE
    4     | FLOAT_TYPE

    5 decls: decls decl
    6      | %empty

    7 decl: type ID ';'

    8 stmts: stmts stmt
    9      | stmt

   10 stmt: '{' stmts '}'
   11     | ID '=' expr ';'
   12     | IF '(' expr ')' stmt
   13     | IF '(' expr ')' stmt ELSE stmt
   14     | WHILE '(' expr ')' stmt
   15     | FOR '(' stmt expr ';' stmt ')' stmt
   16     | DO stmt WHILE '(' expr ')' ';'
   17     | ID INC ';'
   18     | ID DEC ';'
   19     | ID INCX expr ';'
   20     | ID DECX expr ';'
   21     | ID MODX expr ';'
   22     | ID MULX expr ';'
   23     | ID DIVX expr ';'
   24     | ID INC
   25     | ID DEC
   26     | ID INCX expr
   27     | ID DECX expr
   28     | ID MODX expr
   29     | ID MULX expr
   30     | ID DIVX expr
   31     | PRINT expr ';'

   32 expr: VAL
   33     | VAL2
   34     | FALSE
   35     | TRUE
   36     | ID
   37     | '(' expr ')'
   38     | expr '+' expr
   39     | expr '-' expr
   40     | expr '*' expr
   41     | expr '/' expr
   42     | expr '%' expr
   43     | expr AND expr
   44     | expr OR expr
   45     | expr EQ expr
   46     | expr NE expr
   47     | expr GE expr
   48     | expr LE expr
   49     | expr '>' expr
   50     | expr '<' expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 42
'(' (40) 12 13 14 15 16 37
')' (41) 12 13 14 15 16 37
'*' (42) 40
'+' (43) 38
'-' (45) 39
'/' (47) 41
';' (59) 7 11 15 16 17 18 19 20 21 22 23 31
'<' (60) 50
'=' (61) 11
'>' (62) 49
'{' (123) 10
'}' (125) 10
error (256)
AND (258) 43
OR (259) 44
GE (260) 47
LE (261) 48
EQ (262) 45
NE (263) 46
FALSE (264) 34
TRUE (265) 35
IF (266) 12 13
ELSE (267) 13
WHILE (268) 14 16
DO (269) 16
FOR (270) 15
PRINT (271) 31
BOOL_TYPE (272) 2
INT_TYPE (273) 3
FLOAT_TYPE (274) 4
ID (275) 7 11 17 18 19 20 21 22 23 24 25 26 27 28 29 30 36
VAL (276) 32
VAL2 (277) 33
IF_ALONE (278)
INC (279) 17 24
DEC (280) 18 25
INCX (281) 19 26
DECX (282) 20 27
MODX (283) 21 28
MULX (284) 22 29
DIVX (285) 23 30


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
type (46)
    on left: 2 3 4, on right: 7
decls (47)
    on left: 5 6, on right: 1 5
decl (48)
    on left: 7, on right: 5
stmts (49)
    on left: 8 9, on right: 8 10
stmt (50)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31, on right: 1 8 9 12 13 14 15 16
expr (51)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50, on right: 11 12 13 14 15 16 19 20 21 22 23 26 27 28 29 30 31
    37 38 39 40 41 42 43 44 45 46 47 48 49 50


State 0

    0 $accept: . program $end

    $default  reduce using rule 6 (decls)

    program  go to state 1
    decls    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decls . stmt
    5 decls: decls . decl

    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    DO          shift, and go to state 6
    FOR         shift, and go to state 7
    PRINT       shift, and go to state 8
    BOOL_TYPE   shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    ID          shift, and go to state 12
    '{'         shift, and go to state 13

    type  go to state 14
    decl  go to state 15
    stmt  go to state 16


State 3

    0 $accept: program $end .

    $default  accept


State 4

   12 stmt: IF . '(' expr ')' stmt
   13     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 17


State 5

   14 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 18


State 6

   16 stmt: DO . stmt WHILE '(' expr ')' ';'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 19


State 7

   15 stmt: FOR . '(' stmt expr ';' stmt ')' stmt

    '('  shift, and go to state 20


State 8

   31 stmt: PRINT . expr ';'

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 27


State 9

    2 type: BOOL_TYPE .

    $default  reduce using rule 2 (type)


State 10

    3 type: INT_TYPE .

    $default  reduce using rule 3 (type)


State 11

    4 type: FLOAT_TYPE .

    $default  reduce using rule 4 (type)


State 12

   11 stmt: ID . '=' expr ';'
   17     | ID . INC ';'
   18     | ID . DEC ';'
   19     | ID . INCX expr ';'
   20     | ID . DECX expr ';'
   21     | ID . MODX expr ';'
   22     | ID . MULX expr ';'
   23     | ID . DIVX expr ';'
   24     | ID . INC
   25     | ID . DEC
   26     | ID . INCX expr
   27     | ID . DECX expr
   28     | ID . MODX expr
   29     | ID . MULX expr
   30     | ID . DIVX expr

    INC   shift, and go to state 28
    DEC   shift, and go to state 29
    INCX  shift, and go to state 30
    DECX  shift, and go to state 31
    MODX  shift, and go to state 32
    MULX  shift, and go to state 33
    DIVX  shift, and go to state 34
    '='   shift, and go to state 35


State 13

   10 stmt: '{' . stmts '}'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13

    stmts  go to state 36
    stmt   go to state 37


State 14

    7 decl: type . ID ';'

    ID  shift, and go to state 38


State 15

    5 decls: decls decl .

    $default  reduce using rule 5 (decls)


State 16

    1 program: decls stmt .

    $default  reduce using rule 1 (program)


State 17

   12 stmt: IF '(' . expr ')' stmt
   13     | IF '(' . expr ')' stmt ELSE stmt

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 39


State 18

   14 stmt: WHILE '(' . expr ')' stmt

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 40


State 19

   16 stmt: DO stmt . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 41


State 20

   15 stmt: FOR '(' . stmt expr ';' stmt ')' stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 42


State 21

   34 expr: FALSE .

    $default  reduce using rule 34 (expr)


State 22

   35 expr: TRUE .

    $default  reduce using rule 35 (expr)


State 23

   36 expr: ID .

    $default  reduce using rule 36 (expr)


State 24

   32 expr: VAL .

    $default  reduce using rule 32 (expr)


State 25

   33 expr: VAL2 .

    $default  reduce using rule 33 (expr)


State 26

   37 expr: '(' . expr ')'

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 43


State 27

   31 stmt: PRINT expr . ';'
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 57


State 28

   17 stmt: ID INC . ';'
   24     | ID INC .

    ';'  shift, and go to state 58

    $default  reduce using rule 24 (stmt)


State 29

   18 stmt: ID DEC . ';'
   25     | ID DEC .

    ';'  shift, and go to state 59

    $default  reduce using rule 25 (stmt)


State 30

   19 stmt: ID INCX . expr ';'
   26     | ID INCX . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 60


State 31

   20 stmt: ID DECX . expr ';'
   27     | ID DECX . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 61


State 32

   21 stmt: ID MODX . expr ';'
   28     | ID MODX . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 62


State 33

   22 stmt: ID MULX . expr ';'
   29     | ID MULX . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 63


State 34

   23 stmt: ID DIVX . expr ';'
   30     | ID DIVX . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 64


State 35

   11 stmt: ID '=' . expr ';'

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 65


State 36

    8 stmts: stmts . stmt
   10 stmt: '{' stmts . '}'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13
    '}'    shift, and go to state 66

    stmt  go to state 67


State 37

    9 stmts: stmt .

    $default  reduce using rule 9 (stmts)


State 38

    7 decl: type ID . ';'

    ';'  shift, and go to state 68


State 39

   12 stmt: IF '(' expr . ')' stmt
   13     | IF '(' expr . ')' stmt ELSE stmt
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 69


State 40

   14 stmt: WHILE '(' expr . ')' stmt
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 70


State 41

   16 stmt: DO stmt WHILE . '(' expr ')' ';'

    '('  shift, and go to state 71


State 42

   15 stmt: FOR '(' stmt . expr ';' stmt ')' stmt

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 72


State 43

   37 expr: '(' expr . ')'
   38     | expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 73


State 44

   43 expr: expr AND . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 74


State 45

   44 expr: expr OR . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 75


State 46

   47 expr: expr GE . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 76


State 47

   48 expr: expr LE . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 77


State 48

   45 expr: expr EQ . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 78


State 49

   46 expr: expr NE . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 79


State 50

   49 expr: expr '>' . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 80


State 51

   50 expr: expr '<' . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 81


State 52

   38 expr: expr '+' . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 82


State 53

   39 expr: expr '-' . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 83


State 54

   42 expr: expr '%' . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 84


State 55

   40 expr: expr '*' . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 85


State 56

   41 expr: expr '/' . expr

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 86


State 57

   31 stmt: PRINT expr ';' .

    $default  reduce using rule 31 (stmt)


State 58

   17 stmt: ID INC ';' .

    $default  reduce using rule 17 (stmt)


State 59

   18 stmt: ID DEC ';' .

    $default  reduce using rule 18 (stmt)


State 60

   19 stmt: ID INCX expr . ';'
   26     | ID INCX expr .
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 87

    $default  reduce using rule 26 (stmt)


State 61

   20 stmt: ID DECX expr . ';'
   27     | ID DECX expr .
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 88

    $default  reduce using rule 27 (stmt)


State 62

   21 stmt: ID MODX expr . ';'
   28     | ID MODX expr .
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 89

    $default  reduce using rule 28 (stmt)


State 63

   22 stmt: ID MULX expr . ';'
   29     | ID MULX expr .
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 90

    $default  reduce using rule 29 (stmt)


State 64

   23 stmt: ID DIVX expr . ';'
   30     | ID DIVX expr .
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 91

    $default  reduce using rule 30 (stmt)


State 65

   11 stmt: ID '=' expr . ';'
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 92


State 66

   10 stmt: '{' stmts '}' .

    $default  reduce using rule 10 (stmt)


State 67

    8 stmts: stmts stmt .

    $default  reduce using rule 8 (stmts)


State 68

    7 decl: type ID ';' .

    $default  reduce using rule 7 (decl)


State 69

   12 stmt: IF '(' expr ')' . stmt
   13     | IF '(' expr ')' . stmt ELSE stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 93


State 70

   14 stmt: WHILE '(' expr ')' . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 94


State 71

   16 stmt: DO stmt WHILE '(' . expr ')' ';'

    FALSE  shift, and go to state 21
    TRUE   shift, and go to state 22
    ID     shift, and go to state 23
    VAL    shift, and go to state 24
    VAL2   shift, and go to state 25
    '('    shift, and go to state 26

    expr  go to state 95


State 72

   15 stmt: FOR '(' stmt expr . ';' stmt ')' stmt
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ';'  shift, and go to state 96


State 73

   37 expr: '(' expr ')' .

    $default  reduce using rule 37 (expr)


State 74

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   43     | expr AND expr .
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 43 (expr)


State 75

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   44     | expr OR expr .
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 44 (expr)


State 76

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   47     | expr GE expr .
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 47 (expr)


State 77

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   48     | expr LE expr .
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 48 (expr)


State 78

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   45     | expr EQ expr .
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 45 (expr)


State 79

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   46     | expr NE expr .
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 46 (expr)


State 80

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   49     | expr '>' expr .
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 49 (expr)


State 81

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr
   50     | expr '<' expr .

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 50 (expr)


State 82

   38 expr: expr . '+' expr
   38     | expr '+' expr .
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 38 (expr)


State 83

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   39     | expr '-' expr .
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 39 (expr)


State 84

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   42     | expr '%' expr .
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 42 (expr)


State 85

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   40     | expr '*' expr .
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    $default  reduce using rule 40 (expr)


State 86

   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   41     | expr '/' expr .
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    $default  reduce using rule 41 (expr)


State 87

   19 stmt: ID INCX expr ';' .

    $default  reduce using rule 19 (stmt)


State 88

   20 stmt: ID DECX expr ';' .

    $default  reduce using rule 20 (stmt)


State 89

   21 stmt: ID MODX expr ';' .

    $default  reduce using rule 21 (stmt)


State 90

   22 stmt: ID MULX expr ';' .

    $default  reduce using rule 22 (stmt)


State 91

   23 stmt: ID DIVX expr ';' .

    $default  reduce using rule 23 (stmt)


State 92

   11 stmt: ID '=' expr ';' .

    $default  reduce using rule 11 (stmt)


State 93

   12 stmt: IF '(' expr ')' stmt .
   13     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 97

    $default  reduce using rule 12 (stmt)


State 94

   14 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 14 (stmt)


State 95

   16 stmt: DO stmt WHILE '(' expr . ')' ';'
   38 expr: expr . '+' expr
   39     | expr . '-' expr
   40     | expr . '*' expr
   41     | expr . '/' expr
   42     | expr . '%' expr
   43     | expr . AND expr
   44     | expr . OR expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . GE expr
   48     | expr . LE expr
   49     | expr . '>' expr
   50     | expr . '<' expr

    AND  shift, and go to state 44
    OR   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    EQ   shift, and go to state 48
    NE   shift, and go to state 49
    '>'  shift, and go to state 50
    '<'  shift, and go to state 51
    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '%'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 98


State 96

   15 stmt: FOR '(' stmt expr ';' . stmt ')' stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 99


State 97

   13 stmt: IF '(' expr ')' stmt ELSE . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 100


State 98

   16 stmt: DO stmt WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 101


State 99

   15 stmt: FOR '(' stmt expr ';' stmt . ')' stmt

    ')'  shift, and go to state 102


State 100

   13 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 13 (stmt)


State 101

   16 stmt: DO stmt WHILE '(' expr ')' ';' .

    $default  reduce using rule 16 (stmt)


State 102

   15 stmt: FOR '(' stmt expr ';' stmt ')' . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    DO     shift, and go to state 6
    FOR    shift, and go to state 7
    PRINT  shift, and go to state 8
    ID     shift, and go to state 12
    '{'    shift, and go to state 13

    stmt  go to state 103


State 103

   15 stmt: FOR '(' stmt expr ';' stmt ')' stmt .

    $default  reduce using rule 15 (stmt)
