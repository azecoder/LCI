Grammar

    0 $accept: program $end

    1 program: decls stmt

    2 type: BOOL_TYPE
    3     | INT_TYPE

    4 decls: decls decl
    5      | %empty

    6 decl: type ID ';'

    7 stmts: stmts stmt
    8      | stmt

    9 stmt: '{' stmts '}'
   10     | ID '=' expr ';'
   11     | IF '(' expr ')' stmt
   12     | IF '(' expr ')' stmt ELSE stmt
   13     | WHILE '(' expr ')' stmt
   14     | FOR '(' expr ')' stmt
   15     | PRINT expr ';'

   16 expr: VAL
   17     | FALSE
   18     | TRUE
   19     | ID
   20     | '(' expr ')'
   21     | expr '+' expr
   22     | expr '-' expr
   23     | expr '*' expr
   24     | expr '/' expr
   25     | expr AND expr
   26     | expr OR expr
   27     | expr EQ expr
   28     | expr NE expr
   29     | expr GE expr
   30     | expr LE expr
   31     | expr '>' expr
   32     | expr '<' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 12 13 14 20
')' (41) 11 12 13 14 20
'*' (42) 23
'+' (43) 21
'-' (45) 22
'/' (47) 24
';' (59) 6 10 15
'<' (60) 32
'=' (61) 10
'>' (62) 31
'{' (123) 9
'}' (125) 9
error (256)
AND (258) 25
OR (259) 26
GE (260) 29
LE (261) 30
EQ (262) 27
NE (263) 28
FALSE (264) 17
TRUE (265) 18
IF (266) 11 12
ELSE (267) 12
WHILE (268) 13
FOR (269) 14
PRINT (270) 15
BOOL_TYPE (271) 2
INT_TYPE (272) 3
ID (273) 6 10 19
VAL (274) 16
IF_ALONE (275)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
type (35)
    on left: 2 3, on right: 6
decls (36)
    on left: 4 5, on right: 1 4
decl (37)
    on left: 6, on right: 4
stmts (38)
    on left: 7 8, on right: 7 9
stmt (39)
    on left: 9 10 11 12 13 14 15, on right: 1 7 8 11 12 13 14
expr (40)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    10 11 12 13 14 15 20 21 22 23 24 25 26 27 28 29 30 31 32


State 0

    0 $accept: . program $end

    $default  reduce using rule 5 (decls)

    program  go to state 1
    decls    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decls . stmt
    4 decls: decls . decl

    IF         shift, and go to state 4
    WHILE      shift, and go to state 5
    FOR        shift, and go to state 6
    PRINT      shift, and go to state 7
    BOOL_TYPE  shift, and go to state 8
    INT_TYPE   shift, and go to state 9
    ID         shift, and go to state 10
    '{'        shift, and go to state 11

    type  go to state 12
    decl  go to state 13
    stmt  go to state 14


State 3

    0 $accept: program $end .

    $default  accept


State 4

   11 stmt: IF . '(' expr ')' stmt
   12     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 15


State 5

   13 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 16


State 6

   14 stmt: FOR . '(' expr ')' stmt

    '('  shift, and go to state 17


State 7

   15 stmt: PRINT . expr ';'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 23


State 8

    2 type: BOOL_TYPE .

    $default  reduce using rule 2 (type)


State 9

    3 type: INT_TYPE .

    $default  reduce using rule 3 (type)


State 10

   10 stmt: ID . '=' expr ';'

    '='  shift, and go to state 24


State 11

    9 stmt: '{' . stmts '}'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmts  go to state 25
    stmt   go to state 26


State 12

    6 decl: type . ID ';'

    ID  shift, and go to state 27


State 13

    4 decls: decls decl .

    $default  reduce using rule 4 (decls)


State 14

    1 program: decls stmt .

    $default  reduce using rule 1 (program)


State 15

   11 stmt: IF '(' . expr ')' stmt
   12     | IF '(' . expr ')' stmt ELSE stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 28


State 16

   13 stmt: WHILE '(' . expr ')' stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 29


State 17

   14 stmt: FOR '(' . expr ')' stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 30


State 18

   17 expr: FALSE .

    $default  reduce using rule 17 (expr)


State 19

   18 expr: TRUE .

    $default  reduce using rule 18 (expr)


State 20

   19 expr: ID .

    $default  reduce using rule 19 (expr)


State 21

   16 expr: VAL .

    $default  reduce using rule 16 (expr)


State 22

   20 expr: '(' . expr ')'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 31


State 23

   15 stmt: PRINT expr . ';'
   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    GE   shift, and go to state 34
    LE   shift, and go to state 35
    EQ   shift, and go to state 36
    NE   shift, and go to state 37
    '>'  shift, and go to state 38
    '<'  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 44


State 24

   10 stmt: ID '=' . expr ';'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 45


State 25

    7 stmts: stmts . stmt
    9 stmt: '{' stmts . '}'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11
    '}'    shift, and go to state 46

    stmt  go to state 47


State 26

    8 stmts: stmt .

    $default  reduce using rule 8 (stmts)


State 27

    6 decl: type ID . ';'

    ';'  shift, and go to state 48


State 28

   11 stmt: IF '(' expr . ')' stmt
   12     | IF '(' expr . ')' stmt ELSE stmt
   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    GE   shift, and go to state 34
    LE   shift, and go to state 35
    EQ   shift, and go to state 36
    NE   shift, and go to state 37
    '>'  shift, and go to state 38
    '<'  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 49


State 29

   13 stmt: WHILE '(' expr . ')' stmt
   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    GE   shift, and go to state 34
    LE   shift, and go to state 35
    EQ   shift, and go to state 36
    NE   shift, and go to state 37
    '>'  shift, and go to state 38
    '<'  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 50


State 30

   14 stmt: FOR '(' expr . ')' stmt
   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    GE   shift, and go to state 34
    LE   shift, and go to state 35
    EQ   shift, and go to state 36
    NE   shift, and go to state 37
    '>'  shift, and go to state 38
    '<'  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 51


State 31

   20 expr: '(' expr . ')'
   21     | expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    GE   shift, and go to state 34
    LE   shift, and go to state 35
    EQ   shift, and go to state 36
    NE   shift, and go to state 37
    '>'  shift, and go to state 38
    '<'  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ')'  shift, and go to state 52


State 32

   25 expr: expr AND . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 53


State 33

   26 expr: expr OR . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 54


State 34

   29 expr: expr GE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 55


State 35

   30 expr: expr LE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 56


State 36

   27 expr: expr EQ . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 57


State 37

   28 expr: expr NE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 58


State 38

   31 expr: expr '>' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 59


State 39

   32 expr: expr '<' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 60


State 40

   21 expr: expr '+' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 61


State 41

   22 expr: expr '-' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 62


State 42

   23 expr: expr '*' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 63


State 43

   24 expr: expr '/' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 64


State 44

   15 stmt: PRINT expr ';' .

    $default  reduce using rule 15 (stmt)


State 45

   10 stmt: ID '=' expr . ';'
   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    GE   shift, and go to state 34
    LE   shift, and go to state 35
    EQ   shift, and go to state 36
    NE   shift, and go to state 37
    '>'  shift, and go to state 38
    '<'  shift, and go to state 39
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43
    ';'  shift, and go to state 65


State 46

    9 stmt: '{' stmts '}' .

    $default  reduce using rule 9 (stmt)


State 47

    7 stmts: stmts stmt .

    $default  reduce using rule 7 (stmts)


State 48

    6 decl: type ID ';' .

    $default  reduce using rule 6 (decl)


State 49

   11 stmt: IF '(' expr ')' . stmt
   12     | IF '(' expr ')' . stmt ELSE stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 66


State 50

   13 stmt: WHILE '(' expr ')' . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 67


State 51

   14 stmt: FOR '(' expr ')' . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 68


State 52

   20 expr: '(' expr ')' .

    $default  reduce using rule 20 (expr)


State 53

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 25 (expr)


State 54

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 26 (expr)


State 55

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   29     | expr GE expr .
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 29 (expr)


State 56

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   30     | expr LE expr .
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 30 (expr)


State 57

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   27     | expr EQ expr .
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 27 (expr)


State 58

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   28     | expr NE expr .
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 28 (expr)


State 59

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   31     | expr '>' expr .
   32     | expr . '<' expr

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 31 (expr)


State 60

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr
   32     | expr '<' expr .

    AND  shift, and go to state 32
    OR   shift, and go to state 33
    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 32 (expr)


State 61

   21 expr: expr . '+' expr
   21     | expr '+' expr .
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 21 (expr)


State 62

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   22     | expr '-' expr .
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    '*'  shift, and go to state 42
    '/'  shift, and go to state 43

    $default  reduce using rule 22 (expr)


State 63

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   23     | expr '*' expr .
   24     | expr . '/' expr
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    $default  reduce using rule 23 (expr)


State 64

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   24     | expr '/' expr .
   25     | expr . AND expr
   26     | expr . OR expr
   27     | expr . EQ expr
   28     | expr . NE expr
   29     | expr . GE expr
   30     | expr . LE expr
   31     | expr . '>' expr
   32     | expr . '<' expr

    $default  reduce using rule 24 (expr)


State 65

   10 stmt: ID '=' expr ';' .

    $default  reduce using rule 10 (stmt)


State 66

   11 stmt: IF '(' expr ')' stmt .
   12     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 69

    $default  reduce using rule 11 (stmt)


State 67

   13 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 13 (stmt)


State 68

   14 stmt: FOR '(' expr ')' stmt .

    $default  reduce using rule 14 (stmt)


State 69

   12 stmt: IF '(' expr ')' stmt ELSE . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 70


State 70

   12 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 12 (stmt)
