Grammar

    0 $accept: program $end

    1 program: decls stmt

    2 type: BOOL_TYPE
    3     | INT_TYPE

    4 decls: decls decl
    5      | %empty

    6 decl: type ID ';'

    7 stmts: stmts stmt
    8      | stmt

    9 stmt: '{' stmts '}'
   10     | ID '=' expr ';'
   11     | IF '(' expr ')' stmt
   12     | IF '(' expr ')' stmt ELSE stmt
   13     | WHILE '(' expr ')' stmt
   14     | FOR '(' stmt expr ';' stmt ')' stmt
   15     | ID INC ';'
   16     | ID DEC ';'
   17     | ID INCX expr ';'
   18     | ID DECX expr ';'
   19     | ID MODX expr ';'
   20     | ID MULX expr ';'
   21     | ID DIVX expr ';'
   22     | ID INC
   23     | ID DEC
   24     | ID INCX expr
   25     | ID DECX expr
   26     | ID MODX expr
   27     | ID MULX expr
   28     | ID DIVX expr
   29     | PRINT expr ';'

   30 expr: VAL
   31     | FALSE
   32     | TRUE
   33     | ID
   34     | '(' expr ')'
   35     | expr '+' expr
   36     | expr '-' expr
   37     | expr '*' expr
   38     | expr '/' expr
   39     | expr '%' expr
   40     | expr AND expr
   41     | expr OR expr
   42     | expr EQ expr
   43     | expr NE expr
   44     | expr GE expr
   45     | expr LE expr
   46     | expr '>' expr
   47     | expr '<' expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 39
'(' (40) 11 12 13 14 34
')' (41) 11 12 13 14 34
'*' (42) 37
'+' (43) 35
'-' (45) 36
'/' (47) 38
';' (59) 6 10 14 15 16 17 18 19 20 21 29
'<' (60) 47
'=' (61) 10
'>' (62) 46
'{' (123) 9
'}' (125) 9
error (256)
AND (258) 40
OR (259) 41
GE (260) 44
LE (261) 45
EQ (262) 42
NE (263) 43
FALSE (264) 31
TRUE (265) 32
IF (266) 11 12
ELSE (267) 12
WHILE (268) 13
FOR (269) 14
PRINT (270) 29
BOOL_TYPE (271) 2
INT_TYPE (272) 3
ID (273) 6 10 15 16 17 18 19 20 21 22 23 24 25 26 27 28 33
VAL (274) 30
IF_ALONE (275)
INC (276) 15 22
DEC (277) 16 23
INCX (278) 17 24
DECX (279) 18 25
MODX (280) 19 26
MULX (281) 20 27
DIVX (282) 21 28


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
type (43)
    on left: 2 3, on right: 6
decls (44)
    on left: 4 5, on right: 1 4
decl (45)
    on left: 6, on right: 4
stmts (46)
    on left: 7 8, on right: 7 9
stmt (47)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29, on right: 1 7 8 11 12 13 14
expr (48)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47,
    on right: 10 11 12 13 14 17 18 19 20 21 24 25 26 27 28 29 34 35
    36 37 38 39 40 41 42 43 44 45 46 47


State 0

    0 $accept: . program $end

    $default  reduce using rule 5 (decls)

    program  go to state 1
    decls    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decls . stmt
    4 decls: decls . decl

    IF         shift, and go to state 4
    WHILE      shift, and go to state 5
    FOR        shift, and go to state 6
    PRINT      shift, and go to state 7
    BOOL_TYPE  shift, and go to state 8
    INT_TYPE   shift, and go to state 9
    ID         shift, and go to state 10
    '{'        shift, and go to state 11

    type  go to state 12
    decl  go to state 13
    stmt  go to state 14


State 3

    0 $accept: program $end .

    $default  accept


State 4

   11 stmt: IF . '(' expr ')' stmt
   12     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 15


State 5

   13 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 16


State 6

   14 stmt: FOR . '(' stmt expr ';' stmt ')' stmt

    '('  shift, and go to state 17


State 7

   29 stmt: PRINT . expr ';'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 23


State 8

    2 type: BOOL_TYPE .

    $default  reduce using rule 2 (type)


State 9

    3 type: INT_TYPE .

    $default  reduce using rule 3 (type)


State 10

   10 stmt: ID . '=' expr ';'
   15     | ID . INC ';'
   16     | ID . DEC ';'
   17     | ID . INCX expr ';'
   18     | ID . DECX expr ';'
   19     | ID . MODX expr ';'
   20     | ID . MULX expr ';'
   21     | ID . DIVX expr ';'
   22     | ID . INC
   23     | ID . DEC
   24     | ID . INCX expr
   25     | ID . DECX expr
   26     | ID . MODX expr
   27     | ID . MULX expr
   28     | ID . DIVX expr

    INC   shift, and go to state 24
    DEC   shift, and go to state 25
    INCX  shift, and go to state 26
    DECX  shift, and go to state 27
    MODX  shift, and go to state 28
    MULX  shift, and go to state 29
    DIVX  shift, and go to state 30
    '='   shift, and go to state 31


State 11

    9 stmt: '{' . stmts '}'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmts  go to state 32
    stmt   go to state 33


State 12

    6 decl: type . ID ';'

    ID  shift, and go to state 34


State 13

    4 decls: decls decl .

    $default  reduce using rule 4 (decls)


State 14

    1 program: decls stmt .

    $default  reduce using rule 1 (program)


State 15

   11 stmt: IF '(' . expr ')' stmt
   12     | IF '(' . expr ')' stmt ELSE stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 35


State 16

   13 stmt: WHILE '(' . expr ')' stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 36


State 17

   14 stmt: FOR '(' . stmt expr ';' stmt ')' stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 37


State 18

   31 expr: FALSE .

    $default  reduce using rule 31 (expr)


State 19

   32 expr: TRUE .

    $default  reduce using rule 32 (expr)


State 20

   33 expr: ID .

    $default  reduce using rule 33 (expr)


State 21

   30 expr: VAL .

    $default  reduce using rule 30 (expr)


State 22

   34 expr: '(' . expr ')'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 38


State 23

   29 stmt: PRINT expr . ';'
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 52


State 24

   15 stmt: ID INC . ';'
   22     | ID INC .

    ';'  shift, and go to state 53

    $default  reduce using rule 22 (stmt)


State 25

   16 stmt: ID DEC . ';'
   23     | ID DEC .

    ';'  shift, and go to state 54

    $default  reduce using rule 23 (stmt)


State 26

   17 stmt: ID INCX . expr ';'
   24     | ID INCX . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 55


State 27

   18 stmt: ID DECX . expr ';'
   25     | ID DECX . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 56


State 28

   19 stmt: ID MODX . expr ';'
   26     | ID MODX . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 57


State 29

   20 stmt: ID MULX . expr ';'
   27     | ID MULX . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 58


State 30

   21 stmt: ID DIVX . expr ';'
   28     | ID DIVX . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 59


State 31

   10 stmt: ID '=' . expr ';'

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 60


State 32

    7 stmts: stmts . stmt
    9 stmt: '{' stmts . '}'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11
    '}'    shift, and go to state 61

    stmt  go to state 62


State 33

    8 stmts: stmt .

    $default  reduce using rule 8 (stmts)


State 34

    6 decl: type ID . ';'

    ';'  shift, and go to state 63


State 35

   11 stmt: IF '(' expr . ')' stmt
   12     | IF '(' expr . ')' stmt ELSE stmt
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 64


State 36

   13 stmt: WHILE '(' expr . ')' stmt
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 65


State 37

   14 stmt: FOR '(' stmt . expr ';' stmt ')' stmt

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 66


State 38

   34 expr: '(' expr . ')'
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 67


State 39

   40 expr: expr AND . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 68


State 40

   41 expr: expr OR . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 69


State 41

   44 expr: expr GE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 70


State 42

   45 expr: expr LE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 71


State 43

   42 expr: expr EQ . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 72


State 44

   43 expr: expr NE . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 73


State 45

   46 expr: expr '>' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 74


State 46

   47 expr: expr '<' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 75


State 47

   35 expr: expr '+' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 76


State 48

   36 expr: expr '-' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 77


State 49

   39 expr: expr '%' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 78


State 50

   37 expr: expr '*' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 79


State 51

   38 expr: expr '/' . expr

    FALSE  shift, and go to state 18
    TRUE   shift, and go to state 19
    ID     shift, and go to state 20
    VAL    shift, and go to state 21
    '('    shift, and go to state 22

    expr  go to state 80


State 52

   29 stmt: PRINT expr ';' .

    $default  reduce using rule 29 (stmt)


State 53

   15 stmt: ID INC ';' .

    $default  reduce using rule 15 (stmt)


State 54

   16 stmt: ID DEC ';' .

    $default  reduce using rule 16 (stmt)


State 55

   17 stmt: ID INCX expr . ';'
   24     | ID INCX expr .
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 81

    $default  reduce using rule 24 (stmt)


State 56

   18 stmt: ID DECX expr . ';'
   25     | ID DECX expr .
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 82

    $default  reduce using rule 25 (stmt)


State 57

   19 stmt: ID MODX expr . ';'
   26     | ID MODX expr .
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 83

    $default  reduce using rule 26 (stmt)


State 58

   20 stmt: ID MULX expr . ';'
   27     | ID MULX expr .
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 84

    $default  reduce using rule 27 (stmt)


State 59

   21 stmt: ID DIVX expr . ';'
   28     | ID DIVX expr .
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 85

    $default  reduce using rule 28 (stmt)


State 60

   10 stmt: ID '=' expr . ';'
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 86


State 61

    9 stmt: '{' stmts '}' .

    $default  reduce using rule 9 (stmt)


State 62

    7 stmts: stmts stmt .

    $default  reduce using rule 7 (stmts)


State 63

    6 decl: type ID ';' .

    $default  reduce using rule 6 (decl)


State 64

   11 stmt: IF '(' expr ')' . stmt
   12     | IF '(' expr ')' . stmt ELSE stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 87


State 65

   13 stmt: WHILE '(' expr ')' . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 88


State 66

   14 stmt: FOR '(' stmt expr . ';' stmt ')' stmt
   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    GE   shift, and go to state 41
    LE   shift, and go to state 42
    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    '>'  shift, and go to state 45
    '<'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 89


State 67

   34 expr: '(' expr ')' .

    $default  reduce using rule 34 (expr)


State 68

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   40     | expr AND expr .
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 40 (expr)


State 69

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   41     | expr OR expr .
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 41 (expr)


State 70

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   44     | expr GE expr .
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 44 (expr)


State 71

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   45     | expr LE expr .
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 45 (expr)


State 72

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   42     | expr EQ expr .
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 42 (expr)


State 73

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   43     | expr NE expr .
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 43 (expr)


State 74

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   46     | expr '>' expr .
   47     | expr . '<' expr

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 46 (expr)


State 75

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr
   47     | expr '<' expr .

    AND  shift, and go to state 39
    OR   shift, and go to state 40
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 47 (expr)


State 76

   35 expr: expr . '+' expr
   35     | expr '+' expr .
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 35 (expr)


State 77

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   36     | expr '-' expr .
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    '%'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 36 (expr)


State 78

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   39     | expr '%' expr .
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 39 (expr)


State 79

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   37     | expr '*' expr .
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    $default  reduce using rule 37 (expr)


State 80

   35 expr: expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   38     | expr '/' expr .
   39     | expr . '%' expr
   40     | expr . AND expr
   41     | expr . OR expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . GE expr
   45     | expr . LE expr
   46     | expr . '>' expr
   47     | expr . '<' expr

    $default  reduce using rule 38 (expr)


State 81

   17 stmt: ID INCX expr ';' .

    $default  reduce using rule 17 (stmt)


State 82

   18 stmt: ID DECX expr ';' .

    $default  reduce using rule 18 (stmt)


State 83

   19 stmt: ID MODX expr ';' .

    $default  reduce using rule 19 (stmt)


State 84

   20 stmt: ID MULX expr ';' .

    $default  reduce using rule 20 (stmt)


State 85

   21 stmt: ID DIVX expr ';' .

    $default  reduce using rule 21 (stmt)


State 86

   10 stmt: ID '=' expr ';' .

    $default  reduce using rule 10 (stmt)


State 87

   11 stmt: IF '(' expr ')' stmt .
   12     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 90

    $default  reduce using rule 11 (stmt)


State 88

   13 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 13 (stmt)


State 89

   14 stmt: FOR '(' stmt expr ';' . stmt ')' stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 91


State 90

   12 stmt: IF '(' expr ')' stmt ELSE . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 92


State 91

   14 stmt: FOR '(' stmt expr ';' stmt . ')' stmt

    ')'  shift, and go to state 93


State 92

   12 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 12 (stmt)


State 93

   14 stmt: FOR '(' stmt expr ';' stmt ')' . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    FOR    shift, and go to state 6
    PRINT  shift, and go to state 7
    ID     shift, and go to state 10
    '{'    shift, and go to state 11

    stmt  go to state 94


State 94

   14 stmt: FOR '(' stmt expr ';' stmt ')' stmt .

    $default  reduce using rule 14 (stmt)
